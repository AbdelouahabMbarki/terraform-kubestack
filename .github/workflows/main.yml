name: Build Test Publish

on:
  push:
    branches:
    - "*"  # run for branches
    tags:
    - "*"  # run for tags

jobs:
  build-artifacts:
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v1

    - name: Build artifacts
      uses: ./.github/actions/build_artifacts

    # Docker actions run as root, fix ownership of _dist
    - name: Fix owner
      run: |
        sudo chown -R `id -u`:`id -g` ./quickstart/_dist

    - name: 'Upload artifacts'
      uses: actions/upload-artifact@v1
      with:
        name: quickstart-artifacts
        path: ./quickstart/_dist

  build-image:
    runs-on: ubuntu-latest

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v1

    - name: 'Docker login'
      run: |
        echo ${{ secrets.DOCKER_AUTH }} | docker login --username kbstci --password-stdin

    - name: Build image
      env:
        DOCKER_BUILDKIT: 1
      run: |
        docker run \
          --rm \
          --privileged \
          -v `pwd`/oci:/tmp/work \
          -v $HOME/.docker:/root/.docker \
          --entrypoint buildctl-daemonless.sh \
          moby/buildkit:master \
              build \
              --frontend dockerfile.v0 \
              --local context=/tmp/work \
              --local dockerfile=/tmp/work \
              --output type=image,name=kubestack/framework-dev:test-${{ github.sha }},push=true \
              --export-cache type=registry,ref=kubestack/framework-dev:buildcache,push=true \
              --import-cache type=registry,ref=kubestack/framework-dev:buildcache

  test:
    runs-on: ubuntu-latest
    needs: [build-artifacts, build-image]
    strategy:
      matrix:
        test-for: ["aks", "eks", "gke"]

    steps:
    - name: 'Download artifacts'
      uses: actions/download-artifact@v1
      with:
        name: quickstart-artifacts

    - name: 'Unzip ${{ matrix.test-for }} quickstart'
      run: |
        unzip quickstart-artifacts/infra-quickstart-${{ matrix.test-for }}-*.zip

    # Align image test tag and tag in artifact's Dockerfile
    - name: 'Docker retag'
      run: |
        FROM_IMAGE=$(cat ./infra-quickstart-${{ matrix.test-for }}/ci-cd/Dockerfile | sed 's/FROM //')
        docker pull kubestack/framework-dev:test-${{ github.sha }}
        docker tag kubestack/framework-dev:test-${{ github.sha }} $FROM_IMAGE

    - name: 'Docker build'
      env:
        DOCKER_BUILDKIT: 1
      working-directory: ./infra-quickstart-${{ matrix.test-for }}
      run: |
        docker build -t kbst-infra-automation:test ci-cd/

    - name: 'Configure Kubestack'
      working-directory: ./infra-quickstart-${{ matrix.test-for }}
      run: |
        # disable remote state for tests
        rm state.tf

        # set name prefix
        sed -i 's/name_prefix = ""/name_prefix = "test"/g' config.auto.tfvars

    - name: 'Terraform init'
      working-directory: ./infra-quickstart-${{ matrix.test-for }}
      run: |
        docker run --rm \
          -v `pwd`:/infra \
          -u `id -u`:`id -g` \
          kbst-infra-automation:test \
          terraform init

    - name: 'Terraform workspace new ops'
      working-directory: ./infra-quickstart-${{ matrix.test-for }}
      run: |
        docker run --rm \
          -v `pwd`:/infra \
          -u `id -u`:`id -g` \
          kbst-infra-automation:test \
          terraform workspace new ops

    - name: 'Terraform validate'
      working-directory: ./infra-quickstart-${{ matrix.test-for }}
      run: |
        docker run --rm \
          -v `pwd`:/infra \
          -u `id -u`:`id -g` \
          kbst-infra-automation:test \
          terraform validate

  publish-image:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - name: 'Download artifacts'
      uses: actions/download-artifact@v1
      with:
        name: quickstart-artifacts

    - name: 'Docker retag'
      run: |
        FROM_IMAGE=$(cat quickstart-artifacts/infra-quickstart-gke/ci-cd/Dockerfile | sed 's/FROM //')
        docker pull kubestack/framework-dev:test-${{ github.sha }}
        docker tag kubestack/framework-dev:test-${{ github.sha }} $FROM_IMAGE

    - name: 'Docker login'
      run: |
        echo ${{ secrets.DOCKER_AUTH }} | docker login --username kbstci --password-stdin

    - name: 'Docker push'
      run: |
        IMAGE=$(cat quickstart-artifacts/infra-quickstart-gke/ci-cd/Dockerfile | sed 's/FROM //')
        docker push $IMAGE

  publish-artifacts:
    runs-on: ubuntu-latest
    needs: [test]

    strategy:
      matrix:
        test-for: ["aks", "eks", "gke"]

    steps:
    - name: 'Download artifacts'
      uses: actions/download-artifact@v1
      with:
        name: quickstart-artifacts

    - name: 'Setup gcloud'
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCLOUD_AUTH }}

    - name: 'Publish dev archives'
      if: startsWith(github.ref, 'refs/tags/v') == false
      run: |
        gsutil -m cp quickstart-artifacts/infra-quickstart-${{ matrix.test-for }}-${{ github.sha }}.zip gs://dev.quickstart.kubestack.com

    - name: 'Publish archives'
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        VERSION=$(echo $GITHUB_REF | sed -e "s#^refs/tags/##")
        gsutil -m cp quickstart-artifacts/infra-quickstart-${{ matrix.test-for }}-${VERSION}.zip gs://quickstart.kubestack.com
